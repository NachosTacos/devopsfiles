# Data source
spring.datasource.url = jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DB}?useSSL=true
spring.datasource.username = ${MYSQL_USER}
spring.datasource.password = ${MYSQL_PASSWORD}

# To setup db, run the following (and make sure the variables inside the <>s are the same as your environment variables):
# create database <db>; 
# create user '<user>'@'%' identified by '<password>';
# grant all on <db>.* to '<user>'@'%';

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1

# Show or not log for each sql entry
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# The SQL dialect makes hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Initialize the database using data.sql script
spring.datasource.initialization-mode=always

